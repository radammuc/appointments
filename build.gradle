plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.openapi.generator" version "7.2.0"
}

group = 'demo.challenge'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    compileOnly 'org.projectlombok:lombok'
    compileOnly 'org.mapstruct:mapstruct:1.5.5.Final'

    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    // implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'com.h2database:h2'
}

tasks.named('test') {
    useJUnitPlatform()
}

compileJava {
    dependsOn tasks.openApiGenerate
}

openApiGenerate {
    // https://github.com/OpenAPITools/openapi-generator/blob/master/docs/generators/spring.md
    generatorName.set("spring")
    inputSpec.set("$rootDir/rest-api-spec.yml")
    outputDir.set("${buildDir}/generated")
    apiPackage.set("demo.challenge.termine.api")
    //  invokerPackage.set("demo.challenge.termine.invoker")
    modelPackage.set("demo.challenge.termine.dto")
    configOptions.set([
            dateLibrary    : "java8-localdatetime",
            interfaceOnly  : "true",
            library        : "spring-boot",
            useSpringBoot3 : "true",
            openApiNullable: "false"
    ])
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'build/generated/src/main/java'
        }
    }
}
